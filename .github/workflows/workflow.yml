name: CI/CD Bobapp

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Récupérer le code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Installer Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Installer Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: front/package-lock.json

      - name: Compiler et tester le backend
        run: mvn -B clean verify -f back/pom.xml

      - name: Compiler et tester Spring Boot
        run: |
          cd back
          mvn clean verify

      - name: Sauvegarder le rapport JaCoCo
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco/

      - name: Installer les dépendances du frontend
        run: npm ci --prefix front

      - name: Lancer les tests et la couverture du frontend
        run: npm run test --prefix front

      - name: Sauvegarder le rapport de couverture du frontend
        uses: actions/upload-artifact@v4
        with:
          name: front-coverage
          path: front/coverage/

      - name: Lancer l'analyse SonarCloud
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.sources=back/src/main,front/src
            -Dsonar.tests=back/src/test
            -Dsonar.java.binaries=back/target/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=back/target/site/jacoco/jacoco.xml
            -Dsonar.typescript.lcov.reportPaths=front/coverage/bobapp/lcov.info

  docker:
    needs: [build-and-analyze]
    runs-on: ubuntu-latest
    steps:
      - name: Récupérer le code
        uses: actions/checkout@v4

      - name: Se connecter à Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construire et pousser l'image backend
        uses: docker/build-push-action@v4
        with:
          context: ./back
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest

      - name: Construire et pousser l'image frontend
        uses: docker/build-push-action@v4
        with:
          context: ./front
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest