name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-sonar:
    runs-on: ubuntu-latest
    steps:
      # 1. Récupérer le code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Installer Node.js pour le front
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # 3. Installer dépendances et générer coverage front
      - name: Build frontend & run tests
        run: |
          cd front
          npm ci
          npm run test

      # 4. Installer Java pour le back
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 5. Compiler le backend et générer JaCoCo
      - name: Build backend & generate JaCoCo
        run: |
          cd back
          mvn clean verify jacoco:report

      # 6. SonarCloud scan pour front + back
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=1551g1r3g13r1g351r13rd5g13e1r3513r \
            -Dsonar.organization=antoinegallou31 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.sources=front/src,back/src/main/java \
            -Dsonar.tests=front/src,test/back/src/test/java \
            -Dsonar.language=ts,java \
            -Dsonar.typescript.lcov.reportPaths=front/coverage/bobapp/lcov.info \
            -Dsonar.coverage.jacoco.xmlReportPaths=back/target/site/jacoco/jacoco.xml

  docker:
    needs: build-and-sonar
    runs-on: ubuntu-latest
    steps:
      # 1. Récupérer le code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Se connecter à Docker Hub
      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # 3. Construire l'image backend
      - name: Build backend image
        run: docker build -t bobapp-backend ./back

      # 4. Construire l'image frontend
      - name: Build frontend image
        run: docker build -t bobapp-frontend ./front

      # 5. Pousser l'image backend sur Docker Hub
      - name: Push backend image
        run: |
          docker tag bobapp-backend ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest

      # 6. Pousser l'image frontend sur Docker Hub
      - name: Push frontend image
        run: |
          docker tag bobapp-frontend ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest
