name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - name: Récupérer le code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Installer Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Compiler et tester Spring Boot
        run: |
          cd back
          mvn clean verify

      - name: Sauvegarder le rapport JaCoCo
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco/

  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd front
          npm ci

      - name: Run frontend tests with coverage
        run: |
          cd front
          npm run test

      - name: Upload frontend coverage report
        uses: actions/upload-artifact@v4
        with:
          name: front-coverage
          path: front/coverage/

  sonar_scan:
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    steps:
      - name: Récupérer le code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Télécharger le rapport JaCoCo (Backend)
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco/

      - name: Télécharger le rapport de couverture Front (lcov)
        uses: actions/download-artifact@v4
        with:
          name: front-coverage
          path: front/coverage/

      - name: Set up Node.js (pour sonar-scanner du front)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Installer Java (pour Maven/Sonar Scanner du back)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: SonarCloud Scan Global
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd back
          mvn -B sonar:sonar \
            -Dsonar.projectKey=1551g1r3g13r1g351r13rd5g13e1r3513r \
            -Dsonar.organization=antoinegallou31 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.typescript.lcov.reportPaths=../front/coverage/bobapp/lcov.info \
            -Dsonar.sources=src/main/java,../front/src \
            -Dsonar.tests=src/test/java,../front/src \
            -Dsonar.java.binaries=target/classes

  docker:
    needs: [frontend, backend, sonar_scan]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build backend image
        run: docker build -t bobapp-backend ./back

      - name: Build frontend image
        run: docker build -t bobapp-frontend ./front

      - name: Push backend image
        run: |
          docker tag bobapp-backend ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest

      - name: Push frontend image
        run: |
          docker tag bobapp-frontend ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest
